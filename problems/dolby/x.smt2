(set-option :model_validate true)
(set-option :produce-unsat-cores false)
(set-option :auto-config true)
(set-option :smt.relevancy 2)
(set-option :smt.mbqi.max_iterations 10000000)
(declare-fun c0 () Int)
(define-fun e1 () Bool (<= 0 c0))
(declare-fun c2 () Int)
(define-fun e3 () Bool (<= c0 c2))
(define-fun e4 () Bool (<= c2 8))
(define-fun e5 () Bool (and e3 e4))
(define-fun e6 () Bool (and e1 e5))
(define-fun e7 () String (str.substr "a123cdef" c0 (- c2 c0)))
(define-fun e8 () Int (str.len e7))
(define-fun e9 () Bool (<= e8 8))
(define-fun e10 () Bool (and e6 e9))
(declare-fun c11 () Bool)
(define-fun e12 () Bool (not c11))
(declare-fun c13 () Bool)
(define-fun e14 () Bool (not c13))
(define-fun e15 () Int (str.indexof "a123cdef" e7 0))
(declare-fun c16 () Int)
(define-fun e17 () Bool (< e15 c16))
(define-fun e18 () Bool (and e14 e17))
(define-fun e19 () Bool (< c16 e15))
(define-fun e20 () Bool (and c13 e19))
(define-fun e21 () Bool (or e18 e20))
(define-fun e22 () Bool (and e12 e21))
(define-fun e23 () Bool (<= e15 c16))
(define-fun e24 () Bool (and e14 e23))
(define-fun e25 () Bool (<= c16 e15))
(define-fun e26 () Bool (and c13 e25))
(define-fun e27 () Bool (or e24 e26))
(define-fun e28 () Bool (and c11 e27))
(define-fun e29 () Bool (or e22 e28))
(define-fun e30 () Bool (not e29))
(define-fun e31 () Bool (and e10 e30))
(define-fun e32 () String (str.substr "a1234def" c0 (- c2 c0)))
(define-fun e33 () Int (str.len e32))
(define-fun e34 () Bool (<= e33 8))
(define-fun e35 () Bool (and e6 e34))
(define-fun e36 () Int (str.indexof "a1234def" e32 0))
(define-fun e37 () Bool (< e36 c16))
(define-fun e38 () Bool (and e14 e37))
(define-fun e39 () Bool (< c16 e36))
(define-fun e40 () Bool (and c13 e39))
(define-fun e41 () Bool (or e38 e40))
(define-fun e42 () Bool (and e12 e41))
(define-fun e43 () Bool (<= e36 c16))
(define-fun e44 () Bool (and e14 e43))
(define-fun e45 () Bool (<= c16 e36))
(define-fun e46 () Bool (and c13 e45))
(define-fun e47 () Bool (or e44 e46))
(define-fun e48 () Bool (and c11 e47))
(define-fun e49 () Bool (or e42 e48))
(define-fun e50 () Bool (and e35 e49))
(define-fun e51 () Bool (and e31 e50))
(assert e51)
(check-sat)
(get-model)
