(set-option :produce-unsat-cores false)
(set-option :auto-config true)
(set-option :smt.relevancy 2)
(set-option :smt.mbqi.max_iterations 10000000)
(declare-fun c0 () String)
(define-fun e1 () Bool (= "concat" c0))
(define-fun e2 () Bool (not e1))
(define-fun e3 () Bool (= "substring" c0))
(define-fun e4 () Bool (not e3))
(define-fun e5 () Bool (= "in1" c0))
(define-fun e6 () Bool (not e5))
(define-fun e7 () Bool (= "in2" c0))
(define-fun e8 () Bool (and e6 e7))
(define-fun e9 () Bool (or e5 e8))
(define-fun e10 () Bool (and e4 e9))
(define-fun e11 () Bool (or e3 e10))
(define-fun e12 () Bool (and e2 e11))
(define-fun e13 () Bool (or e1 e12))
(declare-fun c14 () String)
(define-fun e15 () Bool (= "concat" c14))
(declare-fun c16 () String)
(define-fun e17 () Bool (= "concat" c16))
(declare-fun c18 () String)
(define-fun e19 () Bool (= "in1" c18))
(define-fun e20 () String (ite e19 "#0317665723dental1583" ""))
(define-fun e21 () Bool (not e19))
(define-fun e22 () Bool (= "in2" c18))
(define-fun e23 () Bool (and e21 e22))
(define-fun e24 () String (ite e23 "1983" ""))
(define-fun e25 () String (str.++ e20 e24))
(declare-fun c26 () String)
(define-fun e27 () Bool (= "in1" c26))
(define-fun e28 () String (ite e27 "#0317665723dental1583" ""))
(define-fun e29 () Bool (not e27))
(define-fun e30 () Bool (= "in2" c26))
(define-fun e31 () Bool (and e29 e30))
(define-fun e32 () String (ite e31 "1983" ""))
(define-fun e33 () String (str.++ e28 e32))
(define-fun e34 () String (str.++ e25 e33))
(define-fun e35 () String (ite e17 e34 ""))
(define-fun e36 () Bool (not e17))
(define-fun e37 () Bool (= "substring" c16))
(define-fun e38 () Bool (not e37))
(define-fun e39 () Bool (= "in1" c16))
(define-fun e40 () Bool (not e39))
(define-fun e41 () Bool (= "in2" c16))
(define-fun e42 () Bool (and e40 e41))
(define-fun e43 () Bool (or e39 e42))
(define-fun e44 () Bool (and e38 e43))
(define-fun e45 () Bool (or e37 e44))
(define-fun e46 () Bool (and e36 e45))
(declare-fun c47 () Int)
(declare-fun c48 () Int)
(define-fun e49 () String (str.substr e25 c47 (- c48 c47)))
(define-fun e50 () String (ite e37 e49 ""))
(define-fun e51 () String (ite e39 "#0317665723dental1583" ""))
(define-fun e52 () String (ite e42 "1983" ""))
(define-fun e53 () String (str.++ e51 e52))
(define-fun e54 () String (ite e44 e53 ""))
(define-fun e55 () String (str.++ e50 e54))
(define-fun e56 () String (ite e46 e55 ""))
(define-fun e57 () String (str.++ e35 e56))
(declare-fun c58 () String)
(define-fun e59 () Bool (= "concat" c58))
(declare-fun c60 () String)
(define-fun e61 () Bool (= "in1" c60))
(define-fun e62 () String (ite e61 "#0317665723dental1583" ""))
(define-fun e63 () Bool (not e61))
(define-fun e64 () Bool (= "in2" c60))
(define-fun e65 () Bool (and e63 e64))
(define-fun e66 () String (ite e65 "1983" ""))
(define-fun e67 () String (str.++ e62 e66))
(declare-fun c68 () String)
(define-fun e69 () Bool (= "in1" c68))
(define-fun e70 () String (ite e69 "#0317665723dental1583" ""))
(define-fun e71 () Bool (not e69))
(define-fun e72 () Bool (= "in2" c68))
(define-fun e73 () Bool (and e71 e72))
(define-fun e74 () String (ite e73 "1983" ""))
(define-fun e75 () String (str.++ e70 e74))
(define-fun e76 () String (str.++ e67 e75))
(define-fun e77 () String (ite e59 e76 ""))
(define-fun e78 () Bool (not e59))
(define-fun e79 () Bool (= "substring" c58))
(define-fun e80 () Bool (not e79))
(define-fun e81 () Bool (= "in1" c58))
(define-fun e82 () Bool (not e81))
(define-fun e83 () Bool (= "in2" c58))
(define-fun e84 () Bool (and e82 e83))
(define-fun e85 () Bool (or e81 e84))
(define-fun e86 () Bool (and e80 e85))
(define-fun e87 () Bool (or e79 e86))
(define-fun e88 () Bool (and e78 e87))
(declare-fun c89 () Int)
(declare-fun c90 () Int)
(define-fun e91 () String (str.substr e67 c89 (- c90 c89)))
(define-fun e92 () String (ite e79 e91 ""))
(define-fun e93 () String (ite e81 "#0317665723dental1583" ""))
(define-fun e94 () String (ite e84 "1983" ""))
(define-fun e95 () String (str.++ e93 e94))
(define-fun e96 () String (ite e86 e95 ""))
(define-fun e97 () String (str.++ e92 e96))
(define-fun e98 () String (ite e88 e97 ""))
(define-fun e99 () String (str.++ e77 e98))
(define-fun e100 () String (str.++ e57 e99))
(define-fun e101 () String (ite e15 e100 ""))
(define-fun e102 () Bool (not e15))
(define-fun e103 () Bool (= "substring" c14))
(define-fun e104 () Bool (not e103))
(define-fun e105 () Bool (= "in1" c14))
(define-fun e106 () Bool (not e105))
(define-fun e107 () Bool (= "in2" c14))
(define-fun e108 () Bool (and e106 e107))
(define-fun e109 () Bool (or e105 e108))
(define-fun e110 () Bool (and e104 e109))
(define-fun e111 () Bool (or e103 e110))
(define-fun e112 () Bool (and e102 e111))
(define-fun e113 () Bool (= "-" c58))
(declare-fun c114 () Int)
(define-fun e115 () Int (- c89))
(define-fun e116 () Int (+ c114 e115))
(define-fun e117 () Bool (not e113))
(define-fun e118 () Bool (= "length" c58))
(define-fun e119 () Bool (not e118))
(define-fun e120 () Bool (= "n" c58))
(define-fun e121 () Bool (and e119 e120))
(define-fun e122 () Bool (or e118 e121))
(define-fun e123 () Bool (and e117 e122))
(define-fun e124 () Int (str.len e67))
(declare-fun c125 () Int)
(define-fun e126 () Int (+ (ite e118 e124 0) (ite e121 c125 0)))
(define-fun e127 () Int (+ (ite e113 e116 0) (ite e123 e126 0)))
(declare-fun c128 () String)
(define-fun e129 () Bool (= "-" c128))
(declare-fun c130 () Int)
(declare-fun c131 () Int)
(define-fun e132 () Int (- c131))
(define-fun e133 () Int (+ c130 e132))
(define-fun e134 () Bool (not e129))
(define-fun e135 () Bool (= "length" c128))
(define-fun e136 () Bool (not e135))
(define-fun e137 () Bool (= "n" c128))
(define-fun e138 () Bool (and e136 e137))
(define-fun e139 () Bool (or e135 e138))
(define-fun e140 () Bool (and e134 e139))
(declare-fun c141 () String)
(define-fun e142 () Bool (= "in1" c141))
(define-fun e143 () String (ite e142 "#0317665723dental1583" ""))
(define-fun e144 () Bool (not e142))
(define-fun e145 () Bool (= "in2" c141))
(define-fun e146 () Bool (and e144 e145))
(define-fun e147 () String (ite e146 "1983" ""))
(define-fun e148 () String (str.++ e143 e147))
(define-fun e149 () Int (str.len e148))
(declare-fun c150 () Int)
(define-fun e151 () Int (+ (ite e135 e149 0) (ite e138 c150 0)))
(define-fun e152 () Int (+ (ite e129 e133 0) (ite e140 e151 0)))
(define-fun e153 () String (str.substr e57 e127 (- e152 e127)))
(define-fun e154 () String (ite e103 e153 ""))
(define-fun e155 () String (ite e105 "#0317665723dental1583" ""))
(define-fun e156 () String (ite e108 "1983" ""))
(define-fun e157 () String (str.++ e155 e156))
(define-fun e158 () String (ite e110 e157 ""))
(define-fun e159 () String (str.++ e154 e158))
(define-fun e160 () String (ite e112 e159 ""))
(define-fun e161 () String (str.++ e101 e160))
(declare-fun c162 () String)
(define-fun e163 () Bool (= "concat" c162))
(declare-fun c164 () String)
(define-fun e165 () Bool (= "concat" c164))
(declare-fun c166 () String)
(define-fun e167 () Bool (= "in1" c166))
(define-fun e168 () String (ite e167 "#0317665723dental1583" ""))
(define-fun e169 () Bool (not e167))
(define-fun e170 () Bool (= "in2" c166))
(define-fun e171 () Bool (and e169 e170))
(define-fun e172 () String (ite e171 "1983" ""))
(define-fun e173 () String (str.++ e168 e172))
(declare-fun c174 () String)
(define-fun e175 () Bool (= "in1" c174))
(define-fun e176 () String (ite e175 "#0317665723dental1583" ""))
(define-fun e177 () Bool (not e175))
(define-fun e178 () Bool (= "in2" c174))
(define-fun e179 () Bool (and e177 e178))
(define-fun e180 () String (ite e179 "1983" ""))
(define-fun e181 () String (str.++ e176 e180))
(define-fun e182 () String (str.++ e173 e181))
(define-fun e183 () String (ite e165 e182 ""))
(define-fun e184 () Bool (not e165))
(define-fun e185 () Bool (= "substring" c164))
(define-fun e186 () Bool (not e185))
(define-fun e187 () Bool (= "in1" c164))
(define-fun e188 () Bool (not e187))
(define-fun e189 () Bool (= "in2" c164))
(define-fun e190 () Bool (and e188 e189))
(define-fun e191 () Bool (or e187 e190))
(define-fun e192 () Bool (and e186 e191))
(define-fun e193 () Bool (or e185 e192))
(define-fun e194 () Bool (and e184 e193))
(declare-fun c195 () Int)
(declare-fun c196 () Int)
(define-fun e197 () String (str.substr e173 c195 (- c196 c195)))
(define-fun e198 () String (ite e185 e197 ""))
(define-fun e199 () String (ite e187 "#0317665723dental1583" ""))
(define-fun e200 () String (ite e190 "1983" ""))
(define-fun e201 () String (str.++ e199 e200))
(define-fun e202 () String (ite e192 e201 ""))
(define-fun e203 () String (str.++ e198 e202))
(define-fun e204 () String (ite e194 e203 ""))
(define-fun e205 () String (str.++ e183 e204))
(declare-fun c206 () String)
(define-fun e207 () Bool (= "concat" c206))
(declare-fun c208 () String)
(define-fun e209 () Bool (= "in1" c208))
(define-fun e210 () String (ite e209 "#0317665723dental1583" ""))
(define-fun e211 () Bool (not e209))
(define-fun e212 () Bool (= "in2" c208))
(define-fun e213 () Bool (and e211 e212))
(define-fun e214 () String (ite e213 "1983" ""))
(define-fun e215 () String (str.++ e210 e214))
(declare-fun c216 () String)
(define-fun e217 () Bool (= "in1" c216))
(define-fun e218 () String (ite e217 "#0317665723dental1583" ""))
(define-fun e219 () Bool (not e217))
(define-fun e220 () Bool (= "in2" c216))
(define-fun e221 () Bool (and e219 e220))
(define-fun e222 () String (ite e221 "1983" ""))
(define-fun e223 () String (str.++ e218 e222))
(define-fun e224 () String (str.++ e215 e223))
(define-fun e225 () String (ite e207 e224 ""))
(define-fun e226 () Bool (not e207))
(define-fun e227 () Bool (= "substring" c206))
(define-fun e228 () Bool (not e227))
(define-fun e229 () Bool (= "in1" c206))
(define-fun e230 () Bool (not e229))
(define-fun e231 () Bool (= "in2" c206))
(define-fun e232 () Bool (and e230 e231))
(define-fun e233 () Bool (or e229 e232))
(define-fun e234 () Bool (and e228 e233))
(define-fun e235 () Bool (or e227 e234))
(define-fun e236 () Bool (and e226 e235))
(declare-fun c237 () Int)
(declare-fun c238 () Int)
(define-fun e239 () String (str.substr e215 c237 (- c238 c237)))
(define-fun e240 () String (ite e227 e239 ""))
(define-fun e241 () String (ite e229 "#0317665723dental1583" ""))
(define-fun e242 () String (ite e232 "1983" ""))
(define-fun e243 () String (str.++ e241 e242))
(define-fun e244 () String (ite e234 e243 ""))
(define-fun e245 () String (str.++ e240 e244))
(define-fun e246 () String (ite e236 e245 ""))
(define-fun e247 () String (str.++ e225 e246))
(define-fun e248 () String (str.++ e205 e247))
(define-fun e249 () String (ite e163 e248 ""))
(define-fun e250 () Bool (not e163))
(define-fun e251 () Bool (= "substring" c162))
(define-fun e252 () Bool (not e251))
(define-fun e253 () Bool (= "in1" c162))
(define-fun e254 () Bool (not e253))
(define-fun e255 () Bool (= "in2" c162))
(define-fun e256 () Bool (and e254 e255))
(define-fun e257 () Bool (or e253 e256))
(define-fun e258 () Bool (and e252 e257))
(define-fun e259 () Bool (or e251 e258))
(define-fun e260 () Bool (and e250 e259))
(define-fun e261 () Bool (= "-" c206))
(declare-fun c262 () Int)
(define-fun e263 () Int (- c237))
(define-fun e264 () Int (+ c262 e263))
(define-fun e265 () Bool (not e261))
(define-fun e266 () Bool (= "length" c206))
(define-fun e267 () Bool (not e266))
(define-fun e268 () Bool (= "n" c206))
(define-fun e269 () Bool (and e267 e268))
(define-fun e270 () Bool (or e266 e269))
(define-fun e271 () Bool (and e265 e270))
(define-fun e272 () Int (str.len e215))
(declare-fun c273 () Int)
(define-fun e274 () Int (+ (ite e266 e272 0) (ite e269 c273 0)))
(define-fun e275 () Int (+ (ite e261 e264 0) (ite e271 e274 0)))
(declare-fun c276 () String)
(define-fun e277 () Bool (= "-" c276))
(declare-fun c278 () Int)
(declare-fun c279 () Int)
(define-fun e280 () Int (- c279))
(define-fun e281 () Int (+ c278 e280))
(define-fun e282 () Bool (not e277))
(define-fun e283 () Bool (= "length" c276))
(define-fun e284 () Bool (not e283))
(define-fun e285 () Bool (= "n" c276))
(define-fun e286 () Bool (and e284 e285))
(define-fun e287 () Bool (or e283 e286))
(define-fun e288 () Bool (and e282 e287))
(declare-fun c289 () String)
(define-fun e290 () Bool (= "in1" c289))
(define-fun e291 () String (ite e290 "#0317665723dental1583" ""))
(define-fun e292 () Bool (not e290))
(define-fun e293 () Bool (= "in2" c289))
(define-fun e294 () Bool (and e292 e293))
(define-fun e295 () String (ite e294 "1983" ""))
(define-fun e296 () String (str.++ e291 e295))
(define-fun e297 () Int (str.len e296))
(declare-fun c298 () Int)
(define-fun e299 () Int (+ (ite e283 e297 0) (ite e286 c298 0)))
(define-fun e300 () Int (+ (ite e277 e281 0) (ite e288 e299 0)))
(define-fun e301 () String (str.substr e205 e275 (- e300 e275)))
(define-fun e302 () String (ite e251 e301 ""))
(define-fun e303 () String (ite e253 "#0317665723dental1583" ""))
(define-fun e304 () String (ite e256 "1983" ""))
(define-fun e305 () String (str.++ e303 e304))
(define-fun e306 () String (ite e258 e305 ""))
(define-fun e307 () String (str.++ e302 e306))
(define-fun e308 () String (ite e260 e307 ""))
(define-fun e309 () String (str.++ e249 e308))
(define-fun e310 () String (str.++ e161 e309))
(define-fun e311 () String (ite e1 e310 ""))
(define-fun e312 () Bool (= "-" c162))
(define-fun e313 () Bool (= "-" c164))
(declare-fun c314 () Int)
(define-fun e315 () Int (- c195))
(define-fun e316 () Int (+ c314 e315))
(define-fun e317 () Bool (not e313))
(define-fun e318 () Bool (= "length" c164))
(define-fun e319 () Bool (not e318))
(define-fun e320 () Bool (= "n" c164))
(define-fun e321 () Bool (and e319 e320))
(define-fun e322 () Bool (or e318 e321))
(define-fun e323 () Bool (and e317 e322))
(define-fun e324 () Int (str.len e173))
(declare-fun c325 () Int)
(define-fun e326 () Int (+ (ite e318 e324 0) (ite e321 c325 0)))
(define-fun e327 () Int (+ (ite e313 e316 0) (ite e323 e326 0)))
(define-fun e328 () Int (- e275))
(define-fun e329 () Int (+ e327 e328))
(define-fun e330 () Bool (not e312))
(define-fun e331 () Bool (= "length" c162))
(define-fun e332 () Bool (not e331))
(define-fun e333 () Bool (= "n" c162))
(define-fun e334 () Bool (and e332 e333))
(define-fun e335 () Bool (or e331 e334))
(define-fun e336 () Bool (and e330 e335))
(define-fun e337 () Int (str.len e205))
(declare-fun c338 () Int)
(define-fun e339 () Int (+ (ite e331 e337 0) (ite e334 c338 0)))
(define-fun e340 () Int (+ (ite e312 e329 0) (ite e336 e339 0)))
(declare-fun c341 () String)
(define-fun e342 () Bool (= "-" c341))
(declare-fun c343 () String)
(define-fun e344 () Bool (= "-" c343))
(declare-fun c345 () Int)
(declare-fun c346 () Int)
(define-fun e347 () Int (- c346))
(define-fun e348 () Int (+ c345 e347))
(define-fun e349 () Bool (not e344))
(define-fun e350 () Bool (= "length" c343))
(define-fun e351 () Bool (not e350))
(define-fun e352 () Bool (= "n" c343))
(define-fun e353 () Bool (and e351 e352))
(define-fun e354 () Bool (or e350 e353))
(define-fun e355 () Bool (and e349 e354))
(declare-fun c356 () String)
(define-fun e357 () Bool (= "in1" c356))
(define-fun e358 () String (ite e357 "#0317665723dental1583" ""))
(define-fun e359 () Bool (not e357))
(define-fun e360 () Bool (= "in2" c356))
(define-fun e361 () Bool (and e359 e360))
(define-fun e362 () String (ite e361 "1983" ""))
(define-fun e363 () String (str.++ e358 e362))
(define-fun e364 () Int (str.len e363))
(declare-fun c365 () Int)
(define-fun e366 () Int (+ (ite e350 e364 0) (ite e353 c365 0)))
(define-fun e367 () Int (+ (ite e344 e348 0) (ite e355 e366 0)))
(declare-fun c368 () String)
(define-fun e369 () Bool (= "-" c368))
(declare-fun c370 () Int)
(declare-fun c371 () Int)
(define-fun e372 () Int (- c371))
(define-fun e373 () Int (+ c370 e372))
(define-fun e374 () Bool (not e369))
(define-fun e375 () Bool (= "length" c368))
(define-fun e376 () Bool (not e375))
(define-fun e377 () Bool (= "n" c368))
(define-fun e378 () Bool (and e376 e377))
(define-fun e379 () Bool (or e375 e378))
(define-fun e380 () Bool (and e374 e379))
(declare-fun c381 () String)
(define-fun e382 () Bool (= "in1" c381))
(define-fun e383 () String (ite e382 "#0317665723dental1583" ""))
(define-fun e384 () Bool (not e382))
(define-fun e385 () Bool (= "in2" c381))
(define-fun e386 () Bool (and e384 e385))
(define-fun e387 () String (ite e386 "1983" ""))
(define-fun e388 () String (str.++ e383 e387))
(define-fun e389 () Int (str.len e388))
(declare-fun c390 () Int)
(define-fun e391 () Int (+ (ite e375 e389 0) (ite e378 c390 0)))
(define-fun e392 () Int (+ (ite e369 e373 0) (ite e380 e391 0)))
(define-fun e393 () Int (- e392))
(define-fun e394 () Int (+ e367 e393))
(define-fun e395 () Bool (not e342))
(define-fun e396 () Bool (= "length" c341))
(define-fun e397 () Bool (not e396))
(define-fun e398 () Bool (= "n" c341))
(define-fun e399 () Bool (and e397 e398))
(define-fun e400 () Bool (or e396 e399))
(define-fun e401 () Bool (and e395 e400))
(define-fun e402 () Bool (= "concat" c343))
(declare-fun c403 () String)
(define-fun e404 () Bool (= "in1" c403))
(define-fun e405 () String (ite e404 "#0317665723dental1583" ""))
(define-fun e406 () Bool (not e404))
(define-fun e407 () Bool (= "in2" c403))
(define-fun e408 () Bool (and e406 e407))
(define-fun e409 () String (ite e408 "1983" ""))
(define-fun e410 () String (str.++ e405 e409))
(define-fun e411 () String (str.++ e363 e410))
(define-fun e412 () String (ite e402 e411 ""))
(define-fun e413 () Bool (not e402))
(define-fun e414 () Bool (= "substring" c343))
(define-fun e415 () Bool (not e414))
(define-fun e416 () Bool (= "in1" c343))
(define-fun e417 () Bool (not e416))
(define-fun e418 () Bool (= "in2" c343))
(define-fun e419 () Bool (and e417 e418))
(define-fun e420 () Bool (or e416 e419))
(define-fun e421 () Bool (and e415 e420))
(define-fun e422 () Bool (or e414 e421))
(define-fun e423 () Bool (and e413 e422))
(declare-fun c424 () Int)
(define-fun e425 () String (str.substr e363 c346 (- c424 c346)))
(define-fun e426 () String (ite e414 e425 ""))
(define-fun e427 () String (ite e416 "#0317665723dental1583" ""))
(define-fun e428 () String (ite e419 "1983" ""))
(define-fun e429 () String (str.++ e427 e428))
(define-fun e430 () String (ite e421 e429 ""))
(define-fun e431 () String (str.++ e426 e430))
(define-fun e432 () String (ite e423 e431 ""))
(define-fun e433 () String (str.++ e412 e432))
(define-fun e434 () Int (str.len e433))
(declare-fun c435 () Int)
(define-fun e436 () Int (+ (ite e396 e434 0) (ite e399 c435 0)))
(define-fun e437 () Int (+ (ite e342 e394 0) (ite e401 e436 0)))
(define-fun e438 () String (str.substr e161 e340 (- e437 e340)))
(define-fun e439 () String (ite e3 e438 ""))
(define-fun e440 () String (ite e5 "#0317665723dental1583" ""))
(define-fun e441 () String (ite e8 "1983" ""))
(define-fun e442 () String (str.++ e440 e441))
(define-fun e443 () String (ite e10 e442 ""))
(define-fun e444 () String (str.++ e439 e443))
(define-fun e445 () String (ite e12 e444 ""))
(define-fun e446 () String (str.++ e311 e445))
(define-fun e447 () Bool (= "6572383" e446))
(define-fun e448 () Bool (and e13 e447))
(define-fun e449 () String (ite e19 "#1234565730medical583" ""))
(define-fun e450 () String (ite e23 "1990" ""))
(define-fun e451 () String (str.++ e449 e450))
(define-fun e452 () String (ite e27 "#1234565730medical583" ""))
(define-fun e453 () String (ite e31 "1990" ""))
(define-fun e454 () String (str.++ e452 e453))
(define-fun e455 () String (str.++ e451 e454))
(define-fun e456 () String (ite e17 e455 ""))
(define-fun e457 () String (str.substr e451 c47 (- c48 c47)))
(define-fun e458 () String (ite e37 e457 ""))
(define-fun e459 () String (ite e39 "#1234565730medical583" ""))
(define-fun e460 () String (ite e42 "1990" ""))
(define-fun e461 () String (str.++ e459 e460))
(define-fun e462 () String (ite e44 e461 ""))
(define-fun e463 () String (str.++ e458 e462))
(define-fun e464 () String (ite e46 e463 ""))
(define-fun e465 () String (str.++ e456 e464))
(define-fun e466 () String (ite e61 "#1234565730medical583" ""))
(define-fun e467 () String (ite e65 "1990" ""))
(define-fun e468 () String (str.++ e466 e467))
(define-fun e469 () String (ite e69 "#1234565730medical583" ""))
(define-fun e470 () String (ite e73 "1990" ""))
(define-fun e471 () String (str.++ e469 e470))
(define-fun e472 () String (str.++ e468 e471))
(define-fun e473 () String (ite e59 e472 ""))
(define-fun e474 () String (str.substr e468 c89 (- c90 c89)))
(define-fun e475 () String (ite e79 e474 ""))
(define-fun e476 () String (ite e81 "#1234565730medical583" ""))
(define-fun e477 () String (ite e84 "1990" ""))
(define-fun e478 () String (str.++ e476 e477))
(define-fun e479 () String (ite e86 e478 ""))
(define-fun e480 () String (str.++ e475 e479))
(define-fun e481 () String (ite e88 e480 ""))
(define-fun e482 () String (str.++ e473 e481))
(define-fun e483 () String (str.++ e465 e482))
(define-fun e484 () String (ite e15 e483 ""))
(define-fun e485 () Int (str.len e468))
(define-fun e486 () Int (+ (ite e118 e485 0) (ite e121 c125 0)))
(define-fun e487 () Int (+ (ite e113 e116 0) (ite e123 e486 0)))
(define-fun e488 () String (ite e142 "#1234565730medical583" ""))
(define-fun e489 () String (ite e146 "1990" ""))
(define-fun e490 () String (str.++ e488 e489))
(define-fun e491 () Int (str.len e490))
(define-fun e492 () Int (+ (ite e135 e491 0) (ite e138 c150 0)))
(define-fun e493 () Int (+ (ite e129 e133 0) (ite e140 e492 0)))
(define-fun e494 () String (str.substr e465 e487 (- e493 e487)))
(define-fun e495 () String (ite e103 e494 ""))
(define-fun e496 () String (ite e105 "#1234565730medical583" ""))
(define-fun e497 () String (ite e108 "1990" ""))
(define-fun e498 () String (str.++ e496 e497))
(define-fun e499 () String (ite e110 e498 ""))
(define-fun e500 () String (str.++ e495 e499))
(define-fun e501 () String (ite e112 e500 ""))
(define-fun e502 () String (str.++ e484 e501))
(define-fun e503 () String (ite e167 "#1234565730medical583" ""))
(define-fun e504 () String (ite e171 "1990" ""))
(define-fun e505 () String (str.++ e503 e504))
(define-fun e506 () String (ite e175 "#1234565730medical583" ""))
(define-fun e507 () String (ite e179 "1990" ""))
(define-fun e508 () String (str.++ e506 e507))
(define-fun e509 () String (str.++ e505 e508))
(define-fun e510 () String (ite e165 e509 ""))
(define-fun e511 () String (str.substr e505 c195 (- c196 c195)))
(define-fun e512 () String (ite e185 e511 ""))
(define-fun e513 () String (ite e187 "#1234565730medical583" ""))
(define-fun e514 () String (ite e190 "1990" ""))
(define-fun e515 () String (str.++ e513 e514))
(define-fun e516 () String (ite e192 e515 ""))
(define-fun e517 () String (str.++ e512 e516))
(define-fun e518 () String (ite e194 e517 ""))
(define-fun e519 () String (str.++ e510 e518))
(define-fun e520 () String (ite e209 "#1234565730medical583" ""))
(define-fun e521 () String (ite e213 "1990" ""))
(define-fun e522 () String (str.++ e520 e521))
(define-fun e523 () String (ite e217 "#1234565730medical583" ""))
(define-fun e524 () String (ite e221 "1990" ""))
(define-fun e525 () String (str.++ e523 e524))
(define-fun e526 () String (str.++ e522 e525))
(define-fun e527 () String (ite e207 e526 ""))
(define-fun e528 () String (str.substr e522 c237 (- c238 c237)))
(define-fun e529 () String (ite e227 e528 ""))
(define-fun e530 () String (ite e229 "#1234565730medical583" ""))
(define-fun e531 () String (ite e232 "1990" ""))
(define-fun e532 () String (str.++ e530 e531))
(define-fun e533 () String (ite e234 e532 ""))
(define-fun e534 () String (str.++ e529 e533))
(define-fun e535 () String (ite e236 e534 ""))
(define-fun e536 () String (str.++ e527 e535))
(define-fun e537 () String (str.++ e519 e536))
(define-fun e538 () String (ite e163 e537 ""))
(define-fun e539 () Int (str.len e522))
(define-fun e540 () Int (+ (ite e266 e539 0) (ite e269 c273 0)))
(define-fun e541 () Int (+ (ite e261 e264 0) (ite e271 e540 0)))
(define-fun e542 () String (ite e290 "#1234565730medical583" ""))
(define-fun e543 () String (ite e294 "1990" ""))
(define-fun e544 () String (str.++ e542 e543))
(define-fun e545 () Int (str.len e544))
(define-fun e546 () Int (+ (ite e283 e545 0) (ite e286 c298 0)))
(define-fun e547 () Int (+ (ite e277 e281 0) (ite e288 e546 0)))
(define-fun e548 () String (str.substr e519 e541 (- e547 e541)))
(define-fun e549 () String (ite e251 e548 ""))
(define-fun e550 () String (ite e253 "#1234565730medical583" ""))
(define-fun e551 () String (ite e256 "1990" ""))
(define-fun e552 () String (str.++ e550 e551))
(define-fun e553 () String (ite e258 e552 ""))
(define-fun e554 () String (str.++ e549 e553))
(define-fun e555 () String (ite e260 e554 ""))
(define-fun e556 () String (str.++ e538 e555))
(define-fun e557 () String (str.++ e502 e556))
(define-fun e558 () String (ite e1 e557 ""))
(define-fun e559 () Int (str.len e505))
(define-fun e560 () Int (+ (ite e318 e559 0) (ite e321 c325 0)))
(define-fun e561 () Int (+ (ite e313 e316 0) (ite e323 e560 0)))
(define-fun e562 () Int (- e541))
(define-fun e563 () Int (+ e561 e562))
(define-fun e564 () Int (str.len e519))
(define-fun e565 () Int (+ (ite e331 e564 0) (ite e334 c338 0)))
(define-fun e566 () Int (+ (ite e312 e563 0) (ite e336 e565 0)))
(define-fun e567 () String (ite e357 "#1234565730medical583" ""))
(define-fun e568 () String (ite e361 "1990" ""))
(define-fun e569 () String (str.++ e567 e568))
(define-fun e570 () Int (str.len e569))
(define-fun e571 () Int (+ (ite e350 e570 0) (ite e353 c365 0)))
(define-fun e572 () Int (+ (ite e344 e348 0) (ite e355 e571 0)))
(define-fun e573 () String (ite e382 "#1234565730medical583" ""))
(define-fun e574 () String (ite e386 "1990" ""))
(define-fun e575 () String (str.++ e573 e574))
(define-fun e576 () Int (str.len e575))
(define-fun e577 () Int (+ (ite e375 e576 0) (ite e378 c390 0)))
(define-fun e578 () Int (+ (ite e369 e373 0) (ite e380 e577 0)))
(define-fun e579 () Int (- e578))
(define-fun e580 () Int (+ e572 e579))
(define-fun e581 () String (ite e404 "#1234565730medical583" ""))
(define-fun e582 () String (ite e408 "1990" ""))
(define-fun e583 () String (str.++ e581 e582))
(define-fun e584 () String (str.++ e569 e583))
(define-fun e585 () String (ite e402 e584 ""))
(define-fun e586 () String (str.substr e569 c346 (- c424 c346)))
(define-fun e587 () String (ite e414 e586 ""))
(define-fun e588 () String (ite e416 "#1234565730medical583" ""))
(define-fun e589 () String (ite e419 "1990" ""))
(define-fun e590 () String (str.++ e588 e589))
(define-fun e591 () String (ite e421 e590 ""))
(define-fun e592 () String (str.++ e587 e591))
(define-fun e593 () String (ite e423 e592 ""))
(define-fun e594 () String (str.++ e585 e593))
(define-fun e595 () Int (str.len e594))
(define-fun e596 () Int (+ (ite e396 e595 0) (ite e399 c435 0)))
(define-fun e597 () Int (+ (ite e342 e580 0) (ite e401 e596 0)))
(define-fun e598 () String (str.substr e502 e566 (- e597 e566)))
(define-fun e599 () String (ite e3 e598 ""))
(define-fun e600 () String (ite e5 "#1234565730medical583" ""))
(define-fun e601 () String (ite e8 "1990" ""))
(define-fun e602 () String (str.++ e600 e601))
(define-fun e603 () String (ite e10 e602 ""))
(define-fun e604 () String (str.++ e599 e603))
(define-fun e605 () String (ite e12 e604 ""))
(define-fun e606 () String (str.++ e558 e605))
(define-fun e607 () Bool (= "6573090" e606))
(define-fun e608 () Bool (and e13 e607))
(define-fun e609 () Bool (and e448 e608))
(assert e609)
(define-fun e610 () Bool (and e2 e448))
(define-fun e611 () Bool (and e3 e610))
(define-fun e612 () Bool (not e611))
(define-fun e613 () Bool (<= 0 e566))
(define-fun e614 () Bool (<= e566 e597))
(define-fun e615 () Int (str.len e502))
(define-fun e616 () Bool (<= e597 e615))
(define-fun e617 () Bool (and e613 e614 e616))
(define-fun e618 () Bool (or e612 e617))
(assert e618)
(define-fun e619 () Bool (or e342 e401))
(define-fun e620 () Bool (or e619 e612))
(assert e620)
(define-fun e621 () Bool (or e312 e336))
(define-fun e622 () Bool (or e621 e612))
(assert e622)
(define-fun e623 () Bool (or e15 e112))
(define-fun e624 () Bool (or e623 e612))
(assert e624)
(define-fun e625 () Bool (or e402 e423))
(define-fun e626 () Bool (and e395 e611))
(define-fun e627 () Bool (and e396 e626))
(define-fun e628 () Bool (not e627))
(define-fun e629 () Bool (or e625 e628))
(assert e629)
(define-fun e630 () Bool (and e413 e627))
(define-fun e631 () Bool (and e414 e630))
(define-fun e632 () Bool (not e631))
(define-fun e633 () Bool (<= 0 c346))
(define-fun e634 () Bool (<= c346 c424))
(define-fun e635 () Bool (<= c424 e570))
(define-fun e636 () Bool (and e633 e634 e635))
(define-fun e637 () Bool (or e632 e636))
(assert e637)
(declare-fun c638 () String)
(define-fun e639 () Bool (= "n" c638))
(define-fun e640 () Bool (or e639 e632))
(assert e640)
(define-fun e641 () Bool (= "n" c403))
(define-fun e642 () Bool (or e641 e632))
(assert e642)
(define-fun e643 () Bool (or e357 e361))
(define-fun e644 () Bool (or e643 e632))
(assert e644)
(define-fun e645 () Bool (or e404 e408))
(define-fun e646 () Bool (and e402 e627))
(define-fun e647 () Bool (not e646))
(define-fun e648 () Bool (or e645 e647))
(assert e648)
(define-fun e649 () Bool (or e643 e647))
(assert e649)
(define-fun e650 () Bool (or e369 e380))
(define-fun e651 () Bool (and e342 e611))
(define-fun e652 () Bool (not e651))
(define-fun e653 () Bool (or e650 e652))
(assert e653)
(define-fun e654 () Bool (or e344 e355))
(define-fun e655 () Bool (or e654 e652))
(assert e655)
(define-fun e656 () Bool (or e382 e386))
(define-fun e657 () Bool (and e374 e651))
(define-fun e658 () Bool (and e375 e657))
(define-fun e659 () Bool (not e658))
(define-fun e660 () Bool (or e656 e659))
(assert e660)
(declare-fun c661 () String)
(define-fun e662 () Bool (= "n" c661))
(define-fun e663 () Bool (and e369 e651))
(define-fun e664 () Bool (not e663))
(define-fun e665 () Bool (or e662 e664))
(assert e665)
(define-fun e666 () Bool (= "n" c381))
(define-fun e667 () Bool (or e666 e664))
(assert e667)
(define-fun e668 () Bool (and e349 e651))
(define-fun e669 () Bool (and e350 e668))
(define-fun e670 () Bool (not e669))
(define-fun e671 () Bool (or e643 e670))
(assert e671)
(define-fun e672 () Bool (and e344 e651))
(define-fun e673 () Bool (not e672))
(define-fun e674 () Bool (or e641 e673))
(assert e674)
(define-fun e675 () Bool (= "n" c356))
(define-fun e676 () Bool (or e675 e673))
(assert e676)
(define-fun e677 () Bool (or e165 e194))
(define-fun e678 () Bool (and e330 e611))
(define-fun e679 () Bool (and e331 e678))
(define-fun e680 () Bool (not e679))
(define-fun e681 () Bool (or e677 e680))
(assert e681)
(define-fun e682 () Bool (<= 0 c195))
(define-fun e683 () Bool (<= c195 c196))
(define-fun e684 () Bool (<= c196 e559))
(define-fun e685 () Bool (and e682 e683 e684))
(define-fun e686 () Bool (and e184 e679))
(define-fun e687 () Bool (and e185 e686))
(define-fun e688 () Bool (not e687))
(define-fun e689 () Bool (or e685 e688))
(assert e689)
(declare-fun c690 () String)
(define-fun e691 () Bool (= "n" c690))
(define-fun e692 () Bool (or e691 e688))
(assert e692)
(define-fun e693 () Bool (= "n" c174))
(define-fun e694 () Bool (or e693 e688))
(assert e694)
(define-fun e695 () Bool (or e167 e171))
(define-fun e696 () Bool (or e695 e688))
(assert e696)
(define-fun e697 () Bool (or e175 e179))
(define-fun e698 () Bool (and e165 e679))
(define-fun e699 () Bool (not e698))
(define-fun e700 () Bool (or e697 e699))
(assert e700)
(define-fun e701 () Bool (or e695 e699))
(assert e701)
(define-fun e702 () Bool (or e261 e271))
(define-fun e703 () Bool (and e312 e611))
(define-fun e704 () Bool (not e703))
(define-fun e705 () Bool (or e702 e704))
(assert e705)
(define-fun e706 () Bool (or e313 e323))
(define-fun e707 () Bool (or e706 e704))
(assert e707)
(define-fun e708 () Bool (or e209 e213))
(define-fun e709 () Bool (and e265 e703))
(define-fun e710 () Bool (and e266 e709))
(define-fun e711 () Bool (not e710))
(define-fun e712 () Bool (or e708 e711))
(assert e712)
(define-fun e713 () Bool (= "n" c216))
(define-fun e714 () Bool (and e261 e703))
(define-fun e715 () Bool (not e714))
(define-fun e716 () Bool (or e713 e715))
(assert e716)
(define-fun e717 () Bool (= "n" c208))
(define-fun e718 () Bool (or e717 e715))
(assert e718)
(define-fun e719 () Bool (and e317 e703))
(define-fun e720 () Bool (and e318 e719))
(define-fun e721 () Bool (not e720))
(define-fun e722 () Bool (or e695 e721))
(assert e722)
(define-fun e723 () Bool (and e313 e703))
(define-fun e724 () Bool (not e723))
(define-fun e725 () Bool (or e693 e724))
(assert e725)
(define-fun e726 () Bool (= "n" c166))
(define-fun e727 () Bool (or e726 e724))
(assert e727)
(define-fun e728 () Bool (<= 0 e487))
(define-fun e729 () Bool (<= e487 e493))
(define-fun e730 () Int (str.len e465))
(define-fun e731 () Bool (<= e493 e730))
(define-fun e732 () Bool (and e728 e729 e731))
(define-fun e733 () Bool (and e102 e611))
(define-fun e734 () Bool (and e103 e733))
(define-fun e735 () Bool (not e734))
(define-fun e736 () Bool (or e732 e735))
(assert e736)
(define-fun e737 () Bool (or e129 e140))
(define-fun e738 () Bool (or e737 e735))
(assert e738)
(define-fun e739 () Bool (or e113 e123))
(define-fun e740 () Bool (or e739 e735))
(assert e740)
(define-fun e741 () Bool (or e17 e46))
(define-fun e742 () Bool (or e741 e735))
(assert e742)
(define-fun e743 () Bool (or e142 e146))
(define-fun e744 () Bool (and e134 e734))
(define-fun e745 () Bool (and e135 e744))
(define-fun e746 () Bool (not e745))
(define-fun e747 () Bool (or e743 e746))
(assert e747)
(declare-fun c748 () String)
(define-fun e749 () Bool (= "n" c748))
(define-fun e750 () Bool (and e129 e734))
(define-fun e751 () Bool (not e750))
(define-fun e752 () Bool (or e749 e751))
(assert e752)
(define-fun e753 () Bool (= "n" c141))
(define-fun e754 () Bool (or e753 e751))
(assert e754)
(define-fun e755 () Bool (or e61 e65))
(define-fun e756 () Bool (and e117 e734))
(define-fun e757 () Bool (and e118 e756))
(define-fun e758 () Bool (not e757))
(define-fun e759 () Bool (or e755 e758))
(assert e759)
(define-fun e760 () Bool (= "n" c68))
(define-fun e761 () Bool (and e113 e734))
(define-fun e762 () Bool (not e761))
(define-fun e763 () Bool (or e760 e762))
(assert e763)
(define-fun e764 () Bool (= "n" c60))
(define-fun e765 () Bool (or e764 e762))
(assert e765)
(define-fun e766 () Bool (<= 0 c47))
(define-fun e767 () Bool (<= c47 c48))
(define-fun e768 () Int (str.len e451))
(define-fun e769 () Bool (<= c48 e768))
(define-fun e770 () Bool (and e766 e767 e769))
(define-fun e771 () Bool (and e36 e734))
(define-fun e772 () Bool (and e37 e771))
(define-fun e773 () Bool (not e772))
(define-fun e774 () Bool (or e770 e773))
(assert e774)
(declare-fun c775 () String)
(define-fun e776 () Bool (= "n" c775))
(define-fun e777 () Bool (or e776 e773))
(assert e777)
(define-fun e778 () Bool (= "n" c26))
(define-fun e779 () Bool (or e778 e773))
(assert e779)
(define-fun e780 () Bool (or e19 e23))
(define-fun e781 () Bool (or e780 e773))
(assert e781)
(define-fun e782 () Bool (or e27 e31))
(define-fun e783 () Bool (and e17 e734))
(define-fun e784 () Bool (not e783))
(define-fun e785 () Bool (or e782 e784))
(assert e785)
(define-fun e786 () Bool (or e780 e784))
(assert e786)
(define-fun e787 () Bool (or e59 e88))
(define-fun e788 () Bool (and e15 e611))
(define-fun e789 () Bool (not e788))
(define-fun e790 () Bool (or e787 e789))
(assert e790)
(define-fun e791 () Bool (or e741 e789))
(assert e791)
(define-fun e792 () Bool (<= 0 c89))
(define-fun e793 () Bool (<= c89 c90))
(define-fun e794 () Bool (<= c90 e485))
(define-fun e795 () Bool (and e792 e793 e794))
(define-fun e796 () Bool (and e78 e788))
(define-fun e797 () Bool (and e79 e796))
(define-fun e798 () Bool (not e797))
(define-fun e799 () Bool (or e795 e798))
(assert e799)
(declare-fun c800 () String)
(define-fun e801 () Bool (= "n" c800))
(define-fun e802 () Bool (or e801 e798))
(assert e802)
(define-fun e803 () Bool (or e760 e798))
(assert e803)
(define-fun e804 () Bool (or e755 e798))
(assert e804)
(define-fun e805 () Bool (or e69 e73))
(define-fun e806 () Bool (and e59 e788))
(define-fun e807 () Bool (not e806))
(define-fun e808 () Bool (or e805 e807))
(assert e808)
(define-fun e809 () Bool (or e755 e807))
(assert e809)
(define-fun e810 () Bool (and e36 e788))
(define-fun e811 () Bool (and e37 e810))
(define-fun e812 () Bool (not e811))
(define-fun e813 () Bool (or e770 e812))
(assert e813)
(define-fun e814 () Bool (or e776 e812))
(assert e814)
(define-fun e815 () Bool (or e778 e812))
(assert e815)
(define-fun e816 () Bool (or e780 e812))
(assert e816)
(define-fun e817 () Bool (and e17 e788))
(define-fun e818 () Bool (not e817))
(define-fun e819 () Bool (or e782 e818))
(assert e819)
(define-fun e820 () Bool (or e780 e818))
(assert e820)
(define-fun e821 () Bool (or e163 e260))
(define-fun e822 () Bool (and e1 e448))
(define-fun e823 () Bool (not e822))
(define-fun e824 () Bool (or e821 e823))
(assert e824)
(define-fun e825 () Bool (or e623 e823))
(assert e825)
(define-fun e826 () Bool (and e250 e822))
(define-fun e827 () Bool (and e251 e826))
(define-fun e828 () Bool (not e827))
(define-fun e829 () Bool (<= 0 e541))
(define-fun e830 () Bool (<= e541 e547))
(define-fun e831 () Bool (<= e547 e564))
(define-fun e832 () Bool (and e829 e830 e831))
(define-fun e833 () Bool (or e828 e832))
(assert e833)
(define-fun e834 () Bool (or e277 e288))
(define-fun e835 () Bool (or e834 e828))
(assert e835)
(define-fun e836 () Bool (or e702 e828))
(assert e836)
(define-fun e837 () Bool (or e677 e828))
(assert e837)
(define-fun e838 () Bool (or e290 e294))
(define-fun e839 () Bool (and e282 e827))
(define-fun e840 () Bool (and e283 e839))
(define-fun e841 () Bool (not e840))
(define-fun e842 () Bool (or e838 e841))
(assert e842)
(declare-fun c843 () String)
(define-fun e844 () Bool (= "n" c843))
(define-fun e845 () Bool (and e277 e827))
(define-fun e846 () Bool (not e845))
(define-fun e847 () Bool (or e844 e846))
(assert e847)
(define-fun e848 () Bool (= "n" c289))
(define-fun e849 () Bool (or e848 e846))
(assert e849)
(define-fun e850 () Bool (and e265 e827))
(define-fun e851 () Bool (and e266 e850))
(define-fun e852 () Bool (not e851))
(define-fun e853 () Bool (or e708 e852))
(assert e853)
(define-fun e854 () Bool (and e261 e827))
(define-fun e855 () Bool (not e854))
(define-fun e856 () Bool (or e713 e855))
(assert e856)
(define-fun e857 () Bool (or e717 e855))
(assert e857)
(define-fun e858 () Bool (and e184 e827))
(define-fun e859 () Bool (and e185 e858))
(define-fun e860 () Bool (not e859))
(define-fun e861 () Bool (or e685 e860))
(assert e861)
(define-fun e862 () Bool (or e691 e860))
(assert e862)
(define-fun e863 () Bool (or e693 e860))
(assert e863)
(define-fun e864 () Bool (or e695 e860))
(assert e864)
(define-fun e865 () Bool (and e165 e827))
(define-fun e866 () Bool (not e865))
(define-fun e867 () Bool (or e697 e866))
(assert e867)
(define-fun e868 () Bool (or e695 e866))
(assert e868)
(define-fun e869 () Bool (or e207 e236))
(define-fun e870 () Bool (and e163 e822))
(define-fun e871 () Bool (not e870))
(define-fun e872 () Bool (or e869 e871))
(assert e872)
(define-fun e873 () Bool (or e677 e871))
(assert e873)
(define-fun e874 () Bool (and e226 e870))
(define-fun e875 () Bool (and e227 e874))
(define-fun e876 () Bool (not e875))
(define-fun e877 () Bool (<= 0 c237))
(define-fun e878 () Bool (<= c237 c238))
(define-fun e879 () Bool (<= c238 e539))
(define-fun e880 () Bool (and e877 e878 e879))
(define-fun e881 () Bool (or e876 e880))
(assert e881)
(declare-fun c882 () String)
(define-fun e883 () Bool (= "n" c882))
(define-fun e884 () Bool (or e883 e876))
(assert e884)
(define-fun e885 () Bool (or e713 e876))
(assert e885)
(define-fun e886 () Bool (or e708 e876))
(assert e886)
(define-fun e887 () Bool (or e217 e221))
(define-fun e888 () Bool (and e207 e870))
(define-fun e889 () Bool (not e888))
(define-fun e890 () Bool (or e887 e889))
(assert e890)
(define-fun e891 () Bool (or e708 e889))
(assert e891)
(define-fun e892 () Bool (and e184 e870))
(define-fun e893 () Bool (and e185 e892))
(define-fun e894 () Bool (not e893))
(define-fun e895 () Bool (or e894 e685))
(assert e895)
(define-fun e896 () Bool (or e691 e894))
(assert e896)
(define-fun e897 () Bool (or e693 e894))
(assert e897)
(define-fun e898 () Bool (or e695 e894))
(assert e898)
(define-fun e899 () Bool (and e165 e870))
(define-fun e900 () Bool (not e899))
(define-fun e901 () Bool (or e697 e900))
(assert e901)
(define-fun e902 () Bool (or e695 e900))
(assert e902)
(define-fun e903 () Bool (and e102 e822))
(define-fun e904 () Bool (and e103 e903))
(define-fun e905 () Bool (not e904))
(define-fun e906 () Bool (or e905 e732))
(assert e906)
(define-fun e907 () Bool (or e737 e905))
(assert e907)
(define-fun e908 () Bool (or e739 e905))
(assert e908)
(define-fun e909 () Bool (or e741 e905))
(assert e909)
(define-fun e910 () Bool (and e134 e904))
(define-fun e911 () Bool (and e135 e910))
(define-fun e912 () Bool (not e911))
(define-fun e913 () Bool (or e743 e912))
(assert e913)
(define-fun e914 () Bool (and e129 e904))
(define-fun e915 () Bool (not e914))
(define-fun e916 () Bool (or e749 e915))
(assert e916)
(define-fun e917 () Bool (or e753 e915))
(assert e917)
(define-fun e918 () Bool (and e117 e904))
(define-fun e919 () Bool (and e118 e918))
(define-fun e920 () Bool (not e919))
(define-fun e921 () Bool (or e755 e920))
(assert e921)
(define-fun e922 () Bool (and e113 e904))
(define-fun e923 () Bool (not e922))
(define-fun e924 () Bool (or e760 e923))
(assert e924)
(define-fun e925 () Bool (or e764 e923))
(assert e925)
(define-fun e926 () Bool (and e36 e904))
(define-fun e927 () Bool (and e37 e926))
(define-fun e928 () Bool (not e927))
(define-fun e929 () Bool (or e770 e928))
(assert e929)
(define-fun e930 () Bool (or e776 e928))
(assert e930)
(define-fun e931 () Bool (or e778 e928))
(assert e931)
(define-fun e932 () Bool (or e780 e928))
(assert e932)
(define-fun e933 () Bool (and e17 e904))
(define-fun e934 () Bool (not e933))
(define-fun e935 () Bool (or e782 e934))
(assert e935)
(define-fun e936 () Bool (or e780 e934))
(assert e936)
(define-fun e937 () Bool (and e15 e822))
(define-fun e938 () Bool (not e937))
(define-fun e939 () Bool (or e787 e938))
(assert e939)
(define-fun e940 () Bool (or e741 e938))
(assert e940)
(define-fun e941 () Bool (and e78 e937))
(define-fun e942 () Bool (and e79 e941))
(define-fun e943 () Bool (not e942))
(define-fun e944 () Bool (or e943 e795))
(assert e944)
(define-fun e945 () Bool (or e801 e943))
(assert e945)
(define-fun e946 () Bool (or e760 e943))
(assert e946)
(define-fun e947 () Bool (or e755 e943))
(assert e947)
(define-fun e948 () Bool (and e59 e937))
(define-fun e949 () Bool (not e948))
(define-fun e950 () Bool (or e805 e949))
(assert e950)
(define-fun e951 () Bool (or e755 e949))
(assert e951)
(define-fun e952 () Bool (and e36 e937))
(define-fun e953 () Bool (and e37 e952))
(define-fun e954 () Bool (not e953))
(define-fun e955 () Bool (or e954 e770))
(assert e955)
(define-fun e956 () Bool (or e776 e954))
(assert e956)
(define-fun e957 () Bool (or e778 e954))
(assert e957)
(define-fun e958 () Bool (or e780 e954))
(assert e958)
(define-fun e959 () Bool (and e17 e937))
(define-fun e960 () Bool (not e959))
(define-fun e961 () Bool (or e782 e960))
(assert e961)
(define-fun e962 () Bool (or e780 e960))
(assert e962)
(define-fun e963 () Bool (and e2 e3))
(define-fun e964 () Bool (not e963))
(define-fun e965 () Bool (<= 0 e340))
(define-fun e966 () Bool (<= e340 e437))
(define-fun e967 () Int (str.len e161))
(define-fun e968 () Bool (<= e437 e967))
(define-fun e969 () Bool (and e965 e966 e968))
(define-fun e970 () Bool (or e964 e969))
(assert e970)
(define-fun e971 () Bool (or e619 e964))
(assert e971)
(define-fun e972 () Bool (or e621 e964))
(assert e972)
(define-fun e973 () Bool (or e623 e964))
(assert e973)
(define-fun e974 () Bool (and e963 e395))
(define-fun e975 () Bool (and e974 e396))
(define-fun e976 () Bool (not e975))
(define-fun e977 () Bool (or e625 e976))
(assert e977)
(define-fun e978 () Bool (and e975 e413))
(define-fun e979 () Bool (and e978 e414))
(define-fun e980 () Bool (not e979))
(define-fun e981 () Bool (<= c424 e364))
(define-fun e982 () Bool (and e633 e634 e981))
(define-fun e983 () Bool (or e980 e982))
(assert e983)
(define-fun e984 () Bool (or e639 e980))
(assert e984)
(define-fun e985 () Bool (or e641 e980))
(assert e985)
(define-fun e986 () Bool (or e643 e980))
(assert e986)
(define-fun e987 () Bool (and e975 e402))
(define-fun e988 () Bool (not e987))
(define-fun e989 () Bool (or e645 e988))
(assert e989)
(define-fun e990 () Bool (or e643 e988))
(assert e990)
(define-fun e991 () Bool (and e963 e342))
(define-fun e992 () Bool (not e991))
(define-fun e993 () Bool (or e650 e992))
(assert e993)
(define-fun e994 () Bool (or e654 e992))
(assert e994)
(define-fun e995 () Bool (and e991 e374))
(define-fun e996 () Bool (and e995 e375))
(define-fun e997 () Bool (not e996))
(define-fun e998 () Bool (or e656 e997))
(assert e998)
(define-fun e999 () Bool (and e991 e369))
(define-fun e1000 () Bool (not e999))
(define-fun e1001 () Bool (or e662 e1000))
(assert e1001)
(define-fun e1002 () Bool (or e666 e1000))
(assert e1002)
(define-fun e1003 () Bool (and e991 e349))
(define-fun e1004 () Bool (and e1003 e350))
(define-fun e1005 () Bool (not e1004))
(define-fun e1006 () Bool (or e643 e1005))
(assert e1006)
(define-fun e1007 () Bool (and e991 e344))
(define-fun e1008 () Bool (not e1007))
(define-fun e1009 () Bool (or e641 e1008))
(assert e1009)
(define-fun e1010 () Bool (or e675 e1008))
(assert e1010)
(define-fun e1011 () Bool (and e963 e330))
(define-fun e1012 () Bool (and e1011 e331))
(define-fun e1013 () Bool (not e1012))
(define-fun e1014 () Bool (or e677 e1013))
(assert e1014)
(define-fun e1015 () Bool (<= c196 e324))
(define-fun e1016 () Bool (and e682 e683 e1015))
(define-fun e1017 () Bool (and e184 e1012))
(define-fun e1018 () Bool (and e185 e1017))
(define-fun e1019 () Bool (not e1018))
(define-fun e1020 () Bool (or e1016 e1019))
(assert e1020)
(define-fun e1021 () Bool (or e691 e1019))
(assert e1021)
(define-fun e1022 () Bool (or e693 e1019))
(assert e1022)
(define-fun e1023 () Bool (or e695 e1019))
(assert e1023)
(define-fun e1024 () Bool (and e165 e1012))
(define-fun e1025 () Bool (not e1024))
(define-fun e1026 () Bool (or e697 e1025))
(assert e1026)
(define-fun e1027 () Bool (or e695 e1025))
(assert e1027)
(define-fun e1028 () Bool (and e963 e312))
(define-fun e1029 () Bool (not e1028))
(define-fun e1030 () Bool (or e702 e1029))
(assert e1030)
(define-fun e1031 () Bool (or e706 e1029))
(assert e1031)
(define-fun e1032 () Bool (and e265 e1028))
(define-fun e1033 () Bool (and e266 e1032))
(define-fun e1034 () Bool (not e1033))
(define-fun e1035 () Bool (or e708 e1034))
(assert e1035)
(define-fun e1036 () Bool (and e261 e1028))
(define-fun e1037 () Bool (not e1036))
(define-fun e1038 () Bool (or e713 e1037))
(assert e1038)
(define-fun e1039 () Bool (or e717 e1037))
(assert e1039)
(define-fun e1040 () Bool (and e1028 e317))
(define-fun e1041 () Bool (and e1040 e318))
(define-fun e1042 () Bool (not e1041))
(define-fun e1043 () Bool (or e695 e1042))
(assert e1043)
(define-fun e1044 () Bool (and e1028 e313))
(define-fun e1045 () Bool (not e1044))
(define-fun e1046 () Bool (or e693 e1045))
(assert e1046)
(define-fun e1047 () Bool (or e726 e1045))
(assert e1047)
(define-fun e1048 () Bool (<= 0 e127))
(define-fun e1049 () Bool (<= e127 e152))
(define-fun e1050 () Int (str.len e57))
(define-fun e1051 () Bool (<= e152 e1050))
(define-fun e1052 () Bool (and e1048 e1049 e1051))
(define-fun e1053 () Bool (and e102 e963))
(define-fun e1054 () Bool (and e103 e1053))
(define-fun e1055 () Bool (not e1054))
(define-fun e1056 () Bool (or e1052 e1055))
(assert e1056)
(define-fun e1057 () Bool (or e737 e1055))
(assert e1057)
(define-fun e1058 () Bool (or e739 e1055))
(assert e1058)
(define-fun e1059 () Bool (or e741 e1055))
(assert e1059)
(define-fun e1060 () Bool (and e134 e1054))
(define-fun e1061 () Bool (and e135 e1060))
(define-fun e1062 () Bool (not e1061))
(define-fun e1063 () Bool (or e743 e1062))
(assert e1063)
(define-fun e1064 () Bool (and e129 e1054))
(define-fun e1065 () Bool (not e1064))
(define-fun e1066 () Bool (or e749 e1065))
(assert e1066)
(define-fun e1067 () Bool (or e753 e1065))
(assert e1067)
(define-fun e1068 () Bool (and e117 e1054))
(define-fun e1069 () Bool (and e118 e1068))
(define-fun e1070 () Bool (not e1069))
(define-fun e1071 () Bool (or e755 e1070))
(assert e1071)
(define-fun e1072 () Bool (and e113 e1054))
(define-fun e1073 () Bool (not e1072))
(define-fun e1074 () Bool (or e760 e1073))
(assert e1074)
(define-fun e1075 () Bool (or e764 e1073))
(assert e1075)
(define-fun e1076 () Int (str.len e25))
(define-fun e1077 () Bool (<= c48 e1076))
(define-fun e1078 () Bool (and e766 e767 e1077))
(define-fun e1079 () Bool (and e36 e1054))
(define-fun e1080 () Bool (and e37 e1079))
(define-fun e1081 () Bool (not e1080))
(define-fun e1082 () Bool (or e1078 e1081))
(assert e1082)
(define-fun e1083 () Bool (or e776 e1081))
(assert e1083)
(define-fun e1084 () Bool (or e778 e1081))
(assert e1084)
(define-fun e1085 () Bool (or e780 e1081))
(assert e1085)
(define-fun e1086 () Bool (and e17 e1054))
(define-fun e1087 () Bool (not e1086))
(define-fun e1088 () Bool (or e782 e1087))
(assert e1088)
(define-fun e1089 () Bool (or e780 e1087))
(assert e1089)
(define-fun e1090 () Bool (and e15 e963))
(define-fun e1091 () Bool (not e1090))
(define-fun e1092 () Bool (or e787 e1091))
(assert e1092)
(define-fun e1093 () Bool (or e741 e1091))
(assert e1093)
(define-fun e1094 () Bool (<= c90 e124))
(define-fun e1095 () Bool (and e792 e793 e1094))
(define-fun e1096 () Bool (and e78 e1090))
(define-fun e1097 () Bool (and e79 e1096))
(define-fun e1098 () Bool (not e1097))
(define-fun e1099 () Bool (or e1095 e1098))
(assert e1099)
(define-fun e1100 () Bool (or e801 e1098))
(assert e1100)
(define-fun e1101 () Bool (or e760 e1098))
(assert e1101)
(define-fun e1102 () Bool (or e755 e1098))
(assert e1102)
(define-fun e1103 () Bool (and e59 e1090))
(define-fun e1104 () Bool (not e1103))
(define-fun e1105 () Bool (or e805 e1104))
(assert e1105)
(define-fun e1106 () Bool (or e755 e1104))
(assert e1106)
(define-fun e1107 () Bool (and e36 e1090))
(define-fun e1108 () Bool (and e37 e1107))
(define-fun e1109 () Bool (not e1108))
(define-fun e1110 () Bool (or e1078 e1109))
(assert e1110)
(define-fun e1111 () Bool (or e776 e1109))
(assert e1111)
(define-fun e1112 () Bool (or e778 e1109))
(assert e1112)
(define-fun e1113 () Bool (or e780 e1109))
(assert e1113)
(define-fun e1114 () Bool (and e17 e1090))
(define-fun e1115 () Bool (not e1114))
(define-fun e1116 () Bool (or e782 e1115))
(assert e1116)
(define-fun e1117 () Bool (or e780 e1115))
(assert e1117)
(define-fun e1118 () Bool (or e2 e821))
(assert e1118)
(define-fun e1119 () Bool (or e2 e623))
(assert e1119)
(define-fun e1120 () Bool (and e1 e250))
(define-fun e1121 () Bool (and e1120 e251))
(define-fun e1122 () Bool (not e1121))
(define-fun e1123 () Bool (<= 0 e275))
(define-fun e1124 () Bool (<= e275 e300))
(define-fun e1125 () Bool (<= e300 e337))
(define-fun e1126 () Bool (and e1123 e1124 e1125))
(define-fun e1127 () Bool (or e1122 e1126))
(assert e1127)
(define-fun e1128 () Bool (or e834 e1122))
(assert e1128)
(define-fun e1129 () Bool (or e702 e1122))
(assert e1129)
(define-fun e1130 () Bool (or e677 e1122))
(assert e1130)
(define-fun e1131 () Bool (and e1121 e282))
(define-fun e1132 () Bool (and e1131 e283))
(define-fun e1133 () Bool (not e1132))
(define-fun e1134 () Bool (or e838 e1133))
(assert e1134)
(define-fun e1135 () Bool (and e1121 e277))
(define-fun e1136 () Bool (not e1135))
(define-fun e1137 () Bool (or e844 e1136))
(assert e1137)
(define-fun e1138 () Bool (or e848 e1136))
(assert e1138)
(define-fun e1139 () Bool (and e1121 e265))
(define-fun e1140 () Bool (and e1139 e266))
(define-fun e1141 () Bool (not e1140))
(define-fun e1142 () Bool (or e708 e1141))
(assert e1142)
(define-fun e1143 () Bool (and e1121 e261))
(define-fun e1144 () Bool (not e1143))
(define-fun e1145 () Bool (or e713 e1144))
(assert e1145)
(define-fun e1146 () Bool (or e717 e1144))
(assert e1146)
(define-fun e1147 () Bool (and e184 e1121))
(define-fun e1148 () Bool (and e185 e1147))
(define-fun e1149 () Bool (not e1148))
(define-fun e1150 () Bool (or e1016 e1149))
(assert e1150)
(define-fun e1151 () Bool (or e691 e1149))
(assert e1151)
(define-fun e1152 () Bool (or e693 e1149))
(assert e1152)
(define-fun e1153 () Bool (or e695 e1149))
(assert e1153)
(define-fun e1154 () Bool (and e165 e1121))
(define-fun e1155 () Bool (not e1154))
(define-fun e1156 () Bool (or e697 e1155))
(assert e1156)
(define-fun e1157 () Bool (or e695 e1155))
(assert e1157)
(define-fun e1158 () Bool (and e1 e163))
(define-fun e1159 () Bool (not e1158))
(define-fun e1160 () Bool (or e869 e1159))
(assert e1160)
(define-fun e1161 () Bool (or e677 e1159))
(assert e1161)
(define-fun e1162 () Bool (and e1158 e226))
(define-fun e1163 () Bool (and e1162 e227))
(define-fun e1164 () Bool (not e1163))
(define-fun e1165 () Bool (<= c238 e272))
(define-fun e1166 () Bool (and e877 e878 e1165))
(define-fun e1167 () Bool (or e1164 e1166))
(assert e1167)
(define-fun e1168 () Bool (or e883 e1164))
(assert e1168)
(define-fun e1169 () Bool (or e713 e1164))
(assert e1169)
(define-fun e1170 () Bool (or e708 e1164))
(assert e1170)
(define-fun e1171 () Bool (and e1158 e207))
(define-fun e1172 () Bool (not e1171))
(define-fun e1173 () Bool (or e887 e1172))
(assert e1173)
(define-fun e1174 () Bool (or e708 e1172))
(assert e1174)
(define-fun e1175 () Bool (and e1158 e184))
(define-fun e1176 () Bool (and e1175 e185))
(define-fun e1177 () Bool (not e1176))
(define-fun e1178 () Bool (or e1177 e1016))
(assert e1178)
(define-fun e1179 () Bool (or e691 e1177))
(assert e1179)
(define-fun e1180 () Bool (or e693 e1177))
(assert e1180)
(define-fun e1181 () Bool (or e695 e1177))
(assert e1181)
(define-fun e1182 () Bool (and e1158 e165))
(define-fun e1183 () Bool (not e1182))
(define-fun e1184 () Bool (or e697 e1183))
(assert e1184)
(define-fun e1185 () Bool (or e695 e1183))
(assert e1185)
(define-fun e1186 () Bool (and e1 e102))
(define-fun e1187 () Bool (and e1186 e103))
(define-fun e1188 () Bool (not e1187))
(define-fun e1189 () Bool (or e1188 e1052))
(assert e1189)
(define-fun e1190 () Bool (or e737 e1188))
(assert e1190)
(define-fun e1191 () Bool (or e739 e1188))
(assert e1191)
(define-fun e1192 () Bool (or e741 e1188))
(assert e1192)
(define-fun e1193 () Bool (and e1187 e134))
(define-fun e1194 () Bool (and e1193 e135))
(define-fun e1195 () Bool (not e1194))
(define-fun e1196 () Bool (or e743 e1195))
(assert e1196)
(define-fun e1197 () Bool (and e1187 e129))
(define-fun e1198 () Bool (not e1197))
(define-fun e1199 () Bool (or e749 e1198))
(assert e1199)
(define-fun e1200 () Bool (or e753 e1198))
(assert e1200)
(define-fun e1201 () Bool (and e1187 e117))
(define-fun e1202 () Bool (and e1201 e118))
(define-fun e1203 () Bool (not e1202))
(define-fun e1204 () Bool (or e755 e1203))
(assert e1204)
(define-fun e1205 () Bool (and e1187 e113))
(define-fun e1206 () Bool (not e1205))
(define-fun e1207 () Bool (or e760 e1206))
(assert e1207)
(define-fun e1208 () Bool (or e764 e1206))
(assert e1208)
(define-fun e1209 () Bool (and e36 e1187))
(define-fun e1210 () Bool (and e37 e1209))
(define-fun e1211 () Bool (not e1210))
(define-fun e1212 () Bool (or e1078 e1211))
(assert e1212)
(define-fun e1213 () Bool (or e776 e1211))
(assert e1213)
(define-fun e1214 () Bool (or e778 e1211))
(assert e1214)
(define-fun e1215 () Bool (or e780 e1211))
(assert e1215)
(define-fun e1216 () Bool (and e17 e1187))
(define-fun e1217 () Bool (not e1216))
(define-fun e1218 () Bool (or e782 e1217))
(assert e1218)
(define-fun e1219 () Bool (or e780 e1217))
(assert e1219)
(define-fun e1220 () Bool (and e1 e15))
(define-fun e1221 () Bool (not e1220))
(define-fun e1222 () Bool (or e787 e1221))
(assert e1222)
(define-fun e1223 () Bool (or e741 e1221))
(assert e1223)
(define-fun e1224 () Bool (and e1220 e78))
(define-fun e1225 () Bool (and e1224 e79))
(define-fun e1226 () Bool (not e1225))
(define-fun e1227 () Bool (or e1226 e1095))
(assert e1227)
(define-fun e1228 () Bool (or e801 e1226))
(assert e1228)
(define-fun e1229 () Bool (or e760 e1226))
(assert e1229)
(define-fun e1230 () Bool (or e755 e1226))
(assert e1230)
(define-fun e1231 () Bool (and e1220 e59))
(define-fun e1232 () Bool (not e1231))
(define-fun e1233 () Bool (or e805 e1232))
(assert e1233)
(define-fun e1234 () Bool (or e755 e1232))
(assert e1234)
(define-fun e1235 () Bool (and e1220 e36))
(define-fun e1236 () Bool (and e1235 e37))
(define-fun e1237 () Bool (not e1236))
(define-fun e1238 () Bool (or e1237 e1078))
(assert e1238)
(define-fun e1239 () Bool (or e776 e1237))
(assert e1239)
(define-fun e1240 () Bool (or e778 e1237))
(assert e1240)
(define-fun e1241 () Bool (or e780 e1237))
(assert e1241)
(define-fun e1242 () Bool (and e1220 e17))
(define-fun e1243 () Bool (not e1242))
(define-fun e1244 () Bool (or e782 e1243))
(assert e1244)
(define-fun e1245 () Bool (or e780 e1243))
(assert e1245)
(check-sat)
(get-model)
(reset)
(set-option :produce-unsat-cores false)
(set-option :auto-config true)
(set-option :smt.relevancy 2)
(set-option :smt.mbqi.max_iterations 10000000)
