(set-logic QF_S)
(set-option :produce-models true)

(declare-fun s720 () String)
(declare-fun s898 () String)
(declare-fun s837 () String)
(declare-fun s840 () String)
(declare-fun s1021 () String)
(declare-fun s605 () String)
(declare-fun s538 () String)
(declare-fun s717 () String)
(declare-fun s1182 () String)
(declare-fun s541 () String)
(declare-fun s118 () String)
(declare-fun s786 () String)
(declare-fun s439 () String)
(declare-fun s1249 () String)
(declare-fun s659 () String)
(declare-fun s662 () String)
(declare-fun s901 () String)
(declare-fun s442 () String)
(declare-fun s608 () String)
(declare-fun s1291 () String)
(declare-fun s783 () String)
(declare-fun s1085 () String)

(assert (= s541 s538 ))
(assert (= s720 s717 ))
(assert (= s118 s662 ))
(assert (= s1249 s118 ))
(assert (not (= s118 s608 )))
(assert (= s608 s605 ))
(assert (not (= s1182 s118 )))
(assert (= s840 s837 ))
(assert (not (= s118 s786 )))
(assert (= s1291 s118 ))
(assert (= s442 s439 ))
(assert (not (= s118 s442 )))
(assert (= s901 s898 ))
(assert (= s662 s659 ))
(assert (not (= s118 s840 )))
(assert (not (= s1021 s118 )))
(assert (not (= s1085 s118 )))
(assert (not (= s1291 s118 )))
(assert (not (= s118 s541 )))
(assert (not (= s118 s901 )))
(assert (= s786 s783 ))
(assert (= s118 "(" ))
(assert (not (= s118 s720 )))


(check-sat)
(get-model)
